{"version":3,"file":"static/js/178.c164f72c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://phonebook/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.js","webpack://phonebook/./src/components/ContactListItem/contactListItem.module.css?d502","components/ContactListItem/ContactListItem.js","webpack://phonebook/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.js","webpack://phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__3ay0L\",\"label\":\"contactForm_label__WakW9\",\"input\":\"contactForm_input__wCtae\",\"button\":\"contactForm_button__JixDz\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport css from './contactForm.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = newContact => {\n    const isContactExists = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isContactExists) {\n      alert(`${newContact.name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ ...newContact, id: nanoid() }));\n    return true;\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = { name, number };\n    handleAddContact(newContact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"nameInput\">\n        Name\n      </label>\n      <input\n        className={css.input}\n        id=\"nameInput\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNameChange}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className={css.label} htmlFor=\"numberInput\">\n        Number\n      </label>\n      <input\n        className={css.input}\n        id=\"numberInput\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleNumberChange}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsItem\":\"contactListItem_contactsItem__PcncR\",\"deleteButton\":\"contactListItem_deleteButton__bbsu0\"};","import React from 'react';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport css from './contactListItem.module.css';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <li className={css.contactsItem}>\n      {contact.name}: {contact.number}{' '}\n      <button\n        className={css.deleteButton}\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contactList_contactsList__iMmmj\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport ContactListItem from '../ContactListItem';\nimport css from './contactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  if (!filteredContacts.length)\n    return <p className=\"contacts_not\">No contacts found</p>;\n\n  return (\n    <ul className={css.contactsList}>\n      {filteredContacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__jh4CL\",\"filterInput\":\"filter_filterInput__2T6yn\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { changeFilter } from '../../redux/contacts/slice';\nimport css from './filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel} htmlFor=\"filterInput\">\n        Find contacts by name\n      </label>\n      <input\n        className={css.filterInput}\n        id=\"filterInput\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectLoading, selectError } from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"contacts_title\">Contacts</h2>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectContacts","items","selectError","error","dispatch","useDispatch","useState","name","setName","number","setNumber","useSelector","reset","className","css","onSubmit","event","preventDefault","newContact","some","contact","toLowerCase","alert","addContact","id","nanoid","handleAddContact","htmlFor","type","value","onChange","target","title","required","onClick","deleteContact","filteredContacts","includes","length","map","onDeleteContact","changeFilter","Contacts","isLoading","useEffect","fetchContacts"],"sourceRoot":""}